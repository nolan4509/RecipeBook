/* Recipe Item Styles */
.flowContainer {
    position: relative;
    /* We first create a flex layout context */
    display: flex;
    /* Then we define the flow direction
     and if we allow the items to wrap
   * Remember this is the same as:
   * flex-direction: row;
   * flex-wrap: wrap;
   */
    flex-flow: row wrap;
    align-items: stretch;
    /* Then we define how is distributed the remaining space */
    justify-content: space-evenly;
}

.recipeName {
    text-align: center;
}

.recipeDifficulty {
    text-align: center;
}

.recipeCookTime {
    text-align: center;
}

.homepage-recipe-tile {
    background-color: #ffc57e;
    position: relative;
    width: 100%;
    min-height: 1px;
    padding: 15px;
    flex-basis: 0;
    flex-grow: 1;
    min-width: 22.75rem;
    max-width: 22.75rem;
    margin: 0.5rem;
    transition: transform .5s;
    /* this is bootstraps m-2 */
    /* max-width: 100%; */
}

.homepage-recipe-tile:hover {
    background-color: #ffd88b;
    transform: scale(1.05);
}

/* Blur on Hover */
/*

section {
    width: 100%;
    height: 100vh;
}

section .layer2 {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: url(bg2.jpg);
    background-attachment: fixed;
    background-position: center;
    transition: 2s;
}

section .layer1 {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%,-50%);
    width:600px;
    height:450px;
    background: url(bg2.jpg);
    background-position: center;
    z-index: 1;
    transition: 2s;
}

.layer1:hover ~ .layer2 {
    filter: blur(10px);
}
.layer1:hover {
    box-shadow: 0 25px 60px rgba(0,0,0,.8);
}
*/
/* Cool Checkbox Slider Thing */
/* body {
    margin: 0;
    padding: 0;
    background: #292929;
} */
.coolCheckbox {
    position: absolute;
    top: 90%;
    left: 80%;
    transform: translate(-50%, -50%);
}

input[type="checkbox"] {
    position: relative;
    width: 120px;
    height: 40px;
    -webkit-appearance: none;
    background: linear-gradient(0deg, #333, #000);
    outline: none;
    border-radius: 20px;
    box-shadow: 0 0 0 4px #353535, 0 0 0 5px #3e3e3e, inset 0 0 10px rgba(0, 0, 0, 1), 0 5px 20px rgba(0, 0, 0, .5), inset 0 0 15px rgba(0, 0, 0, .2);
}

input:checked[type="checkbox"] {
    background: linear-gradient(0deg, #6dd1ff, #20b7ff);
    box-shadow: 0 0 2px #6dd1ff, 0 0 0 4px #353535, 0 0 0 5px #3e3e3e, inset 0 0 10px rgba(0, 0, 0, 1), 0 5px 20px rgba(0, 0, 0, .5), inset 0 0 15px rgba(0, 0, 0, .2);
}

input[type="checkbox"]:before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 80px;
    height: 40px;
    background: linear-gradient(0deg, #000, #6b6b6b);
    border-radius: 20px;
    box-shadow: 0 0 0 1px #232323;
    transform: scale(.98, .96);
    transition: .5s;
}

input:checked[type="checkbox"]:before {
    left: 40px;
}

input[type="checkbox"]:after {
    content: '';
    position: absolute;
    top: calc(50% - 2px);
    left: 65px;
    width: 4px;
    height: 4px;
    background: linear-gradient(0deg, #6b6b6b, #000);
    border-radius: 50%;
    transition: .5s;
}

input:checked[type="checkbox"]:after {
    background: #63cdff;
    left: 105px;
    box-shadow: 0 0 5px #13b3ff, 0 0 15px #13b3ff;
}

/* Rainbow Gradient Shadow */
/*
body {
    margin: 0;
    padding: 0;
    background: #000;
} */
.rainbowShadow {
    position: relative;
    /* background: linear-gradient(0deg, #000, #262626); */
}

/* .rainbowShadow:before,
.rainbowShadow:after {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    background: linear-gradient(45deg, #fb0094, #0000ff, #00ff00, #ffff00, #ff0000, #fb0094, #0000ff, #00ff00, #ffff00, #ff0000);
    background-size: 400%;
    width: calc(100% + 4px);
    height: calc(100% + 4px);
    z-index: -1;
    animation: animate 20s linear infinite;
}

.rainbowShadow:after {
    filter: blur(20px);
}

@keyframes animate {
    0% {
        background-position: 0 0;
    }

    50% {
        background-position: 300% 0;
    }

    100% {
        background-position: 0 0;
    }
} */
/* Button Flipping */
button.recipeItemRemoveButton {
    position: absolute;
    /* Button Position in div or container */
    top: 90%;
    left: 20%;
    transform: translate(-50%, -50%);
    /* Button Size */
    width: 125px;
    height: 60px;
    text-align: center;
    transform-style: preserve-3d;
    perspective: 1000px;
    transform-origin: center center;
    background: rgba(255, 255, 255, 0);
    border-color: rgba(255, 255, 255, 0);
}

span.forFlipButton {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: block;
    text-align: center;
    line-height: 60px;
    font-size: 24px;
    background: rgba(255, 255, 255, 0);
    transform-style: preserve-3d;
    backface-visibility: hidden;
    border-radius: 30px;
    text-transform: uppercase;
    /* Text Color in button */
    color: #000;
    transition: 0.75s;
}

span.front {
    transform: rotateX(0deg) translateZ(20px);
}

button.recipeItemRemoveButton:hover span.front {
    transform: rotateX(-540deg) translateZ(20px);
}

span.back {
    transform: rotateX(540deg) translateZ(20px);
}

button.recipeItemRemoveButton:hover span.back {
    transform: rotateX(0deg) translateZ(20px);
}

span.center {
    background: linear-gradient(to right, #c31a5b, #7129bd);
}

span.center:before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(to right, #ffdd1f, #c31a5b);
    border-radius: 30px;
    transform: translateZ(-1px);
}

button.recipeItemRemoveButton:hover span.center {
    transform: rotateX(-540deg) translateZ(0px);
}